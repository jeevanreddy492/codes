class Solution {
  public:
    bool isSafe(int i,int j,vector<vector<int>> &mat,int num){
        for(int k=0;k<9;k++){
            //check row
            if(mat[i][k]==num){
                return false;
            }
            //check column
            if(mat[k][j]==num){
                return false;
            }
            //check all elements in a box 
            if(mat[3*(i/3)+k/3][3*(j/3)+k%3]==num){
                return false;
            }
        }
        return true;
    }
    bool fun(vector<vector<int>> &mat){
        for(int i=0;i<9;i++){
            for(int j=0;j<9;j++){
                if(mat[i][j]==0){
                    for(int num=1;num<=9;num++){
                        if(isSafe(i,j,mat,num)){
                            mat[i][j]=num;
                            if(fun(mat)){
                                return true;
                            }
                            else{
                                mat[i][j]=0;
                            }
                        }
                    }
                    return false;
                }
            }
        }
        return true;
    }
    void solveSudoku(vector<vector<int>> &mat) {
        // code here
        fun(mat);
    }
};
